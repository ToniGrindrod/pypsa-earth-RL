atlite:
  cutouts:
    cutout-2013-era5-tutorial:
      dx: 0.3
      dy: 0.3
      module: era5
  nprocesses: 4
augmented_line_connection:
  add_to_snakefile: false
  connectivity_upgrade: 2
  min_DC_length: 600
  min_expansion: 1
  new_line_type:
  - HVAC
base_network:
  min_voltage_rebase_voltage: 35000
  min_voltage_substation_offshore: 35000
build_osm_network:
  force_ac: false
  group_close_buses: true
  group_tolerance_buses: 5000
  overpassing_lines_tolerance: 1
  split_overpassing_lines: true
build_shape_options:
  contended_flag: set_by_country
  gadm_layer_id: 1
  gdp_method: standard
  nprocesses: 2
  out_logging: true
  update_file: false
  worldpop_method: standard
  year: 2020
clean_osm_data_options:
  add_line_endings: true
  generator_name_method: OSM
  names_by_shapes: true
  path_custom_cables: false
  path_custom_lines: false
  path_custom_substations: false
  tag_substation: transmission
  threshold_voltage: 35000
  use_custom_cables: OSM_only
  use_custom_lines: OSM_only
  use_custom_substations: OSM_only
cluster_options:
  aggregation_strategies:
    generators:
      committable: any
      efficiency: mean
      marginal_cost: mean
      p_min_pu: mean
      p_nom: sum
      p_nom_max: sum
      p_nom_min: sum
      ramp_limit_down: max
      ramp_limit_up: max
  alternative_clustering: false
  cluster_network:
    algorithm: kmeans
    exclude_carriers: []
    feature: solar+onwind-time
  distribute_cluster:
  - load
  out_logging: true
  simplify_network:
    algorithm: kmeans
    exclude_carriers: []
    feature: solar+onwind-time
    p_threshold_drop_isolated: 20
    p_threshold_merge_isolated: 300
    remove_stubs: true
    remove_stubs_across_borders: true
    s_threshold_fetch_isolated: 0.05
    to_substations: false
costs:
  USD2013_to_EUR2013: 0.7532
  emission_prices:
    co2: 0.0
  fill_values:
    CO2 intensity: 0
    FOM: 0
    VOM: 0
    discount rate: 0.07
    efficiency: 1
    fuel: 0
    investment: 0
    lifetime: 25
  marginal_cost:
    H2: 0.0
    battery: 0.0
    battery inverter: 0.0
    electrolysis: 0.0
    fuel cell: 0.0
    hydro: 0.0
    offwind: 0.015
    onwind: 0.015
    solar: 0.01
  rooftop_share: 0.14
  version: v0.5.0
  year: 2030
countries:
- NG
- BJ
crs:
  area_crs: ESRI:54009
  distance_crs: EPSG:3857
  geo_crs: EPSG:4326
custom_rules: []
electricity:
  agg_p_nom_limits: data/agg_p_nom_minmax.csv
  automatic_emission: true
  automatic_emission_base_year: 1990
  base_voltage: 380.0
  co2base: 1487000000.0
  co2limit: 77500000.0
  conventional_carriers:
  - nuclear
  - oil
  - OCGT
  - CCGT
  - coal
  - lignite
  - geothermal
  - biomass
  custom_powerplants: false
  estimate_renewable_capacities:
    p_nom_max: false
    p_nom_min: 1
    stats: irena
    technology_mapping:
      Offshore:
      - offwind-ac
      - offwind-dc
      Onshore:
      - onwind
      PV:
      - solar
    year: 2020
  extendable_carriers:
    Generator:
    - solar
    - onwind
    - offwind-ac
    - offwind-dc
    - OCGT
    Link: []
    StorageUnit: []
    Store: []
  hvdc_as_lines: false
  max_hours:
    H2: 168
    battery: 6
  operational_reserve:
    activate: false
    contingency: 0
    epsilon_load: 0.02
    epsilon_vres: 0.02
  powerplants_filter: (DateOut >= 2022 or DateOut != DateOut)
  renewable_carriers:
  - solar
  - onwind
  - offwind-ac
  - offwind-dc
  - hydro
  voltages:
  - 132.0
  - 220.0
  - 300.0
  - 380.0
  - 500.0
  - 750.0
enable:
  build_cutout: false
  build_natura_raster: true
  download_osm_data: true
  retrieve_cost_data: true
  retrieve_databundle: true
lines:
  ac_types:
    132.0: 243-AL1/39-ST1A 20.0
    220.0: Al/St 240/40 2-bundle 220.0
    300.0: Al/St 240/40 3-bundle 300.0
    380.0: Al/St 240/40 4-bundle 380.0
    500.0: Al/St 240/40 4-bundle 380.0
    750.0: Al/St 560/50 4-bundle 750.0
  dc_types:
    500.0: HVDC XLPE 1000
  length_factor: 1.25
  s_max_pu: 0.7
  s_nom_max: .inf
  under_construction: zero
links:
  p_max_pu: 1.0
  p_nom_max: .inf

  under_construction: "zero" # 'zero': set capacity to zero, 'remove': remove, 'keep': with full capacity

transformers:
  x: 0.1
  s_nom: 2000.
  type: ""

atlite:
  nprocesses: 4
  cutouts:
    # geographical bounds automatically determined from countries input
    cutout-2013-era5:
      module: era5
      dx: 0.3  # cutout resolution
      dy: 0.3  # cutout resolution
      # The cutout time is automatically set by the snapshot range. See `snapshot:` option above and 'build_cutout.py'.
      # time: ["2013-01-01", "2014-01-01"]  # to manually specify a different weather year (~70 years available)
      # The cutout spatial extent [x,y] is automatically set by country selection. See `countries:` option above and 'build_cutout.py'.
      # x: [-12., 35.]  # set cutout range manual, instead of automatic by boundaries of country
      # y: [33., 72]    # manual set cutout range


renewable:
  hydro:
    PHS_max_hours: 6
    carriers:
    - ror
    - PHS
    - hydro
    clip_min_inflow: 1.0
    cutout: cutout-2013-era5-tutorial
    hydro_max_hours: energy_capacity_totals_by_country
    hydro_max_hours_default: 6.0
    hydrobasins_level: 4
    multiplier: 1.1
    normalization:
      method: hydro_capacities
      year: 2013
    resource:
      flowspeed: 1.0
      hydrobasins: data/hydrobasins/hybas_world.shp
      method: hydro
  offwind-ac:
    capacity_per_sqkm: 3
    clip_p_max_pu: 0.01
    copernicus:
      grid_codes:
      - 80
      - 200
    cutout: cutout-2013-era5-tutorial
    extendable: true
    max_depth: 50
    max_shore_distance: 30000
    natura: true
    potential: simple
    resource:
      method: wind
      turbine: NREL_ReferenceTurbine_5MW_offshore
  offwind-dc:
    capacity_per_sqkm: 3
    clip_p_max_pu: 0.01
    copernicus:
      grid_codes:
      - 80
      - 200
    cutout: cutout-2013-era5-tutorial
    extendable: true
    max_depth: 50
    min_shore_distance: 30000
    natura: true
    potential: simple
    resource:
      method: wind
      turbine: NREL_ReferenceTurbine_5MW_offshore
  onwind:
    capacity_per_sqkm: 3
    clip_p_max_pu: 0.01
    copernicus:
      distance: 1000
      distance_grid_codes:
      - 50
      grid_codes:
      - 20
      - 30
      - 40
      - 60
      - 100
      - 111
      - 112
      - 113
      - 114
      - 115
      - 116
      - 121
      - 122
      - 123
      - 124
      - 125
      - 126
    cutout: cutout-2013-era5-tutorial
    extendable: true
    natura: true
    potential: simple
    resource:
      method: wind
      turbine: Vestas_V112_3MW
  solar:
    capacity_per_sqkm: 4.6
    clip_p_max_pu: 0.01
    copernicus:
      grid_codes:
      - 20
      - 30
      - 40
      - 50
      - 60
      - 90
      - 100
    correction_factor: 0.854337
    cutout: cutout-2013-era5-tutorial
    extendable: true
    natura: true
    potential: simple
    resource:
      method: hydro
      hydrobasins: data/hydrobasins/hybas_world.shp
      flowspeed: 1.0  # m/s
      # weight_with_height: false
      # show_progress: true
    carriers: [ror, PHS, hydro]
    PHS_max_hours: 6
    hydro_max_hours: "energy_capacity_totals_by_country"  # not active
    hydro_max_hours_default: 6.0  # (optional, default 6) Default value of max_hours for hydro when NaN values are found
    clip_min_inflow: 1.0
    extendable: true
    normalization:
      method: hydro_capacities  # 'hydro_capacities' to rescale country hydro production by using hydro_capacities, 'eia' to rescale by eia data, false for no rescaling
      year: 2013  # (optional) year of statistics used to rescale the runoff time series. When not provided, the weather year of the snapshots is used
    multiplier: 1.1  # multiplier applied after the normalization of the hydro production; default 1.0

# TODO: Needs to be adjusted for Africa.
# Costs Configuration (Do not remove, needed for Sphynx documentation).
costs:
  year: 2030
  version: v0.5.0
  rooftop_share: 0.14  # based on the potentials, assuming  (0.1 kW/m2 and 10 m2/person)
  USD2013_to_EUR2013: 0.7532 # [EUR/USD] ECB: https://www.ecb.europa.eu/stats/exchange/eurofxref/html/eurofxref-graph-usd.en.html
  fill_values:
    FOM: 0
    VOM: 0
    efficiency: 1
    fuel: 0
    investment: 0
    lifetime: 25
    CO2 intensity: 0
    discount rate: 0.071
  marginal_cost: # EUR/MWh
    solar: 0.01
    onwind: 0.015
    offwind: 0.015
    hydro: 0.
    H2: 0.
    electrolysis: 0.
    fuel cell: 0.
    battery: 0.
    battery inverter: 0.
  emission_prices: # in currency per tonne emission, only used with the option Ep
    co2: 0.


monte_carlo:
  # Description: Specify Monte Carlo sampling options for uncertainty analysis.
  # Define the option list for Monte Carlo sampling.
  # Make sure add_to_snakefile is set to true to enable Monte-Carlo
  options:
    add_to_snakefile: false # When set to true, enables Monte Carlo sampling
    samples: 9 # number of optimizations. Note that number of samples when using scipy has to be the square of a prime number
    sampling_strategy: "chaospy"  # "pydoe2", "chaospy", "scipy", packages that are supported
    seed: 42 # set seedling for reproducibility
  # Uncertainties on any PyPSA object are specified by declaring the specific PyPSA object under the key 'uncertainties'.
  # For each PyPSA object, the 'type' and 'args' keys represent the type of distribution and its argument, respectively.
  # Supported distributions types are uniform, normal, lognormal, triangle, beta and gamma.
  # The arguments of the distribution are passed using the key 'args'  as follows, tailored by distribution type
  # normal: [mean, std], lognormal: [mean, std], uniform: [lower_bound, upper_bound],
  # triangle: [mid_point (between 0 - 1)], beta: [alpha, beta], gamma: [shape, scale]
  # More info on the distributions are documented in the Chaospy reference guide...
  # https://chaospy.readthedocs.io/en/master/reference/distribution/index.html
  # An abstract example is as follows:
  # {pypsa network object, e.g. "loads_t.p_set"}:
  # type: {any supported distribution among the previous: "uniform", "normal", ...}
  # args: {arguments passed as a list depending on the distribution, see the above and more at https://pypsa.readthedocs.io/}
  uncertainties:
    loads_t.p_set:
      type: uniform
      args: [0, 1]
    generators_t.p_max_pu.loc[:, n.generators.carrier == "onwind"]:
      type: lognormal
      args: [1.5]
    generators_t.p_max_pu.loc[:, n.generators.carrier == "solar"]:
      type: beta
      args: [0.5, 2]



solving:
  options:
    clip_p_max_pu: 0.01
    formulation: kirchhoff
    load_shedding: true
    max_iterations: 6
    min_iterations: 4
    noisy_costs: true
    skip_iterations: true
    track_iterations: false
  solver:
    name: gurobi
summary_dir: results
transformers:
  s_nom: 2000.0
  type: ''
  x: 0.1
tutorial: true
version: 0.3.0
