"""
Proposed code structure:
X read network (.nc-file)
X add export bus
- connect hydrogen buses (advanced: only ports, not all) to export bus
- add store and connect to export bus
- (add load and connect to export bus) only required if the "store" option fails

Possible improvements:
- Select port buses automatically (with both voronoi and gadm clustering)
"""


from pathlib import Path
import os

import pandas as pd
import pypsa
from helpers import override_component_attrs
import logging
logger = logging.getLogger(__name__)

def select_ports(n):
    """ This function selects ports, currently it's done manually (TODO improve)
    """

    hydrogen_buses = n.buses[n.buses.index.str.contains("H2")]
    print(hydrogen_buses)

    hydrogen_buses_ports = hydrogen_buses.iloc[0:2]
    print(hydrogen_buses_ports)

    return hydrogen_buses_ports


if __name__ == "__main__":
    if "snakemake" not in globals():
        os.chdir(os.path.dirname(os.path.abspath(__file__)))
        from helpers import mock_snakemake, sets_path_to_root

        snakemake = mock_snakemake(
            "add_endogenous_demand",
            simpl="",
            clusters="20",
            ll="c1.0",
            opts="Co2L",
            planning_horizons="2030",
            sopts="730H",
            discountrate=0.069,
        )
        sets_path_to_root("pypsa-earth-sec")
    
    overrides = override_component_attrs(snakemake.input.overrides)
    n = pypsa.Network(snakemake.input.network, override_component_attrs=overrides)

    n.add(
        "Bus",
        "H2 export bus",
        carrier = "H2",
    )

    # get hydrogen export buses/ports
    hydrogen_buses_ports =select_ports(n)

    n.madd(
        "Link",
        names = hydrogen_buses_ports.index + " export",
        bus0=hydrogen_buses_ports.index,
        bus1="H2 export bus",
        p_nom_extendable = True
    )

    # log export links
    logger.info("Added export links")
    export_links = n.links[n.links.index.str.contains("export")]
    logger.info(export_links)


    print("code done")
